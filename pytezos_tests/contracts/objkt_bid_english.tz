parameter (or
            (or (or (nat %bid) (nat %cancel_auction))
                (or (nat %conclude_auction)
                    (pair %create_auction
                      (pair (pair (address %artist) (timestamp %end_time))
                            (pair (nat %extension_time) (address %fa2)))
                      (pair (pair (nat %objkt_id) (mutez %price_increment))
                            (pair (mutez %reserve)
                                  (pair (nat %royalties) (timestamp %start_time)))))))
            (or (or (unit %default) (option %set_delegate key_hash))
                (or (address %update_admin) (nat %update_management_fee))));
storage (pair (pair (address %admin) (nat %auction_id))
              (pair
                (big_map %auctions nat
                                   (pair
                                     (pair
                                       (pair (address %artist)
                                             (pair (address %creator)
                                                   (mutez %current_price)))
                                       (pair (timestamp %end_time)
                                             (pair (nat %extension_time) (address %fa2))))
                                     (pair
                                       (pair (address %highest_bidder)
                                             (pair (nat %objkt_id)
                                                   (mutez %price_increment)))
                                       (pair (pair (mutez %reserve) (nat %royalties))
                                             (pair (timestamp %start_time) (nat %state))))))
                (pair (nat %management_fee) (big_map %metadata string bytes))));
code { CAST (pair
              (or
                (or (or nat nat)
                    (or nat
                        (pair (pair (pair address timestamp) (pair nat address))
                              (pair (pair nat mutez) (pair mutez (pair nat timestamp))))))
                (or (or unit (option key_hash)) (or address nat)))
              (pair (pair address nat)
                    (pair
                      (big_map nat
                               (pair
                                 (pair (pair address (pair address mutez))
                                       (pair timestamp (pair nat address)))
                                 (pair (pair address (pair nat mutez))
                                       (pair (pair mutez nat) (pair timestamp nat)))))
                      (pair nat (big_map string bytes))))) ;
       UNPAIR ;
       IF_LEFT
         { IF_LEFT
             { IF_LEFT
                 { PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                   SENDER ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "can' bid from contract address" ; FAILWITH } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1191 ; FAILWITH } {} ;
                   CAR ;
                   CAR ;
                   GET 3 ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { PUSH string "can't bid on own auction" ; FAILWITH } {} ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1192 ; FAILWITH } {} ;
                   GET 7 ;
                   NOW ;
                   COMPARE ;
                   GE ;
                   IF
                     { SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 1192 ; FAILWITH } {} ;
                       CAR ;
                       GET 3 ;
                       NOW ;
                       COMPARE ;
                       LT }
                     { PUSH bool False } ;
                   IF {} { PUSH string "ouside auction time" ; FAILWITH } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1193 ; FAILWITH } {} ;
                   GET 5 ;
                   CAR ;
                   AMOUNT ;
                   COMPARE ;
                   GE ;
                   IF
                     { SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 1193 ; FAILWITH } {} ;
                       GET 3 ;
                       GET 4 ;
                       DUP 3 ;
                       GET 3 ;
                       DUP 3 ;
                       GET ;
                       IF_NONE { PUSH int 1193 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       ADD ;
                       AMOUNT ;
                       COMPARE ;
                       GE }
                     { PUSH bool False } ;
                   IF {} { PUSH string "bid too small" ; FAILWITH } ;
                   PUSH nat 0 ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1194 ; FAILWITH } {} ;
                   GET 8 ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "auction not active" ; FAILWITH } ;
                   PUSH mutez 0 ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1197 ; FAILWITH } {} ;
                   CAR ;
                   CAR ;
                   GET 4 ;
                   COMPARE ;
                   EQ ;
                   IF
                     { NIL operation }
                     { NIL operation ;
                       DUP 3 ;
                       GET 3 ;
                       DUP 3 ;
                       GET ;
                       IF_NONE { PUSH int 1198 ; FAILWITH } {} ;
                       GET 3 ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { PUSH int 1198 ; FAILWITH } {} ;
                       DUP 4 ;
                       GET 3 ;
                       DUP 4 ;
                       GET ;
                       IF_NONE { PUSH int 1198 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       UNIT ;
                       TRANSFER_TOKENS ;
                       CONS } ;
                   DIG 2 ;
                   DUP ;
                   GET 3 ;
                   DUP ;
                   DUP 5 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1200 ; FAILWITH } {} ;
                   UNPAIR ;
                   UNPAIR ;
                   UNPAIR ;
                   SWAP ;
                   CAR ;
                   AMOUNT ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   UPDATE 3 ;
                   DUP ;
                   GET 3 ;
                   DUP ;
                   DUP 5 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1201 ; FAILWITH } {} ;
                   UNPAIR ;
                   SWAP ;
                   UNPAIR ;
                   CDR ;
                   SENDER ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   UPDATE 3 ;
                   DUP ;
                   DUG 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1205 ; FAILWITH } {} ;
                   CAR ;
                   GET 5 ;
                   INT ;
                   NOW ;
                   DUP 5 ;
                   GET 3 ;
                   DUP 5 ;
                   GET ;
                   IF_NONE { PUSH int 1205 ; FAILWITH } {} ;
                   CAR ;
                   GET 3 ;
                   SUB ;
                   COMPARE ;
                   LT ;
                   IF
                     { DUP 3 ;
                       DUP ;
                       GET 3 ;
                       DUP ;
                       DUP 5 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 1206 ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       CDR ;
                       NOW ;
                       DIG 9 ;
                       GET 3 ;
                       DIG 9 ;
                       GET ;
                       IF_NONE { PUSH int 1206 ; FAILWITH } {} ;
                       CAR ;
                       GET 5 ;
                       INT ;
                       ADD ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       UPDATE 3 ;
                       SWAP }
                     { SWAP ; DROP } }
                 { SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1179 ; FAILWITH } {} ;
                   CAR ;
                   CAR ;
                   GET 3 ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "not seller" ; FAILWITH } ;
                   PUSH nat 0 ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1180 ; FAILWITH } {} ;
                   GET 8 ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "auction not active" ; FAILWITH } ;
                   PUSH mutez 0 ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1181 ; FAILWITH } {} ;
                   CAR ;
                   CAR ;
                   GET 4 ;
                   COMPARE ;
                   EQ ;
                   IF
                     {}
                     { PUSH string "auction has already received a bid" ; FAILWITH } ;
                   NIL operation ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1183 ; FAILWITH } {} ;
                   CAR ;
                   GET 6 ;
                   CONTRACT %transfer (list (pair address
                                                 (list (pair address (pair nat nat))))) ;
                   IF_NONE { PUSH int 1239 ; FAILWITH } {} ;
                   PUSH mutez 0 ;
                   NIL (pair address (list (pair address (pair nat nat)))) ;
                   NIL (pair address (pair nat nat)) ;
                   PUSH nat 1 ;
                   DUP 8 ;
                   GET 3 ;
                   DUP 8 ;
                   GET ;
                   IF_NONE { PUSH int 1183 ; FAILWITH } {} ;
                   GET 3 ;
                   GET 3 ;
                   SENDER ;
                   PAIR 3 ;
                   CONS ;
                   SELF_ADDRESS ;
                   PAIR ;
                   CONS ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DIG 2 ;
                   DUP ;
                   GET 3 ;
                   DUP ;
                   DIG 4 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1186 ; FAILWITH } {} ;
                   PUSH nat 1 ;
                   UPDATE 8 ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   UPDATE 3 ;
                   SWAP } }
             { IF_LEFT
                 { PUSH nat 0 ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1210 ; FAILWITH } {} ;
                   GET 8 ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "auction not active" ; FAILWITH } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1211 ; FAILWITH } {} ;
                   CAR ;
                   GET 3 ;
                   NOW ;
                   COMPARE ;
                   GE ;
                   IF {} { PUSH string "auction not over yet" ; FAILWITH } ;
                   NIL operation ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 1214 ; FAILWITH } {} ;
                   CAR ;
                   GET 6 ;
                   CONTRACT %transfer (list (pair address
                                                 (list (pair address (pair nat nat))))) ;
                   IF_NONE { PUSH int 1239 ; FAILWITH } {} ;
                   PUSH mutez 0 ;
                   NIL (pair address (list (pair address (pair nat nat)))) ;
                   NIL (pair address (pair nat nat)) ;
                   PUSH nat 1 ;
                   DUP 8 ;
                   GET 3 ;
                   DUP 8 ;
                   GET ;
                   IF_NONE { PUSH int 1214 ; FAILWITH } {} ;
                   GET 3 ;
                   GET 3 ;
                   DUP 9 ;
                   GET 3 ;
                   DUP 9 ;
                   GET ;
                   IF_NONE { PUSH int 1214 ; FAILWITH } {} ;
                   GET 3 ;
                   CAR ;
                   PAIR 3 ;
                   CONS ;
                   SELF_ADDRESS ;
                   PAIR ;
                   CONS ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   PUSH nat 0 ;
                   PUSH mutez 1 ;
                   DUP 5 ;
                   GET 3 ;
                   DUP 5 ;
                   GET ;
                   IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                   CAR ;
                   CAR ;
                   GET 4 ;
                   EDIV ;
                   IF_NONE { UNIT ; FAILWITH } {} ;
                   CAR ;
                   COMPARE ;
                   GT ;
                   IF
                     { PUSH nat 0 ;
                       PUSH nat 1000 ;
                       DUP 5 ;
                       GET 5 ;
                       PUSH mutez 1 ;
                       DUP 7 ;
                       GET 3 ;
                       DUP 7 ;
                       GET ;
                       IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       EDIV ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 1218 ; FAILWITH } { CAR } ;
                       COMPARE ;
                       GT ;
                       IF
                         { DUP 3 ;
                           CAR ;
                           CAR ;
                           CONTRACT unit ;
                           IF_NONE { PUSH int 1226 ; FAILWITH } {} ;
                           PUSH mutez 1 ;
                           PUSH nat 1000 ;
                           DUP 6 ;
                           GET 5 ;
                           PUSH mutez 1 ;
                           DUP 8 ;
                           GET 3 ;
                           DUP 8 ;
                           GET ;
                           IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                           CAR ;
                           CAR ;
                           GET 4 ;
                           EDIV ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH int 1218 ; FAILWITH } { CAR } ;
                           MUL ;
                           UNIT ;
                           TRANSFER_TOKENS ;
                           CONS }
                         {} ;
                       PUSH nat 0 ;
                       PUSH nat 1000 ;
                       DUP 5 ;
                       GET 3 ;
                       DUP 5 ;
                       GET ;
                       IF_NONE { PUSH int 1219 ; FAILWITH } {} ;
                       GET 5 ;
                       CDR ;
                       PUSH mutez 1 ;
                       DUP 7 ;
                       GET 3 ;
                       DUP 7 ;
                       GET ;
                       IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       EDIV ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 1219 ; FAILWITH } { CAR } ;
                       COMPARE ;
                       GT ;
                       IF
                         { DUP 3 ;
                           GET 3 ;
                           DUP 3 ;
                           GET ;
                           IF_NONE { PUSH int 1230 ; FAILWITH } {} ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CONTRACT unit ;
                           IF_NONE { PUSH int 1230 ; FAILWITH } {} ;
                           PUSH mutez 1 ;
                           PUSH nat 1000 ;
                           DUP 6 ;
                           GET 3 ;
                           DUP 6 ;
                           GET ;
                           IF_NONE { PUSH int 1219 ; FAILWITH } {} ;
                           GET 5 ;
                           CDR ;
                           PUSH mutez 1 ;
                           DUP 8 ;
                           GET 3 ;
                           DUP 8 ;
                           GET ;
                           IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                           CAR ;
                           CAR ;
                           GET 4 ;
                           EDIV ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH int 1219 ; FAILWITH } { CAR } ;
                           MUL ;
                           UNIT ;
                           TRANSFER_TOKENS ;
                           CONS }
                         {} ;
                       DUP 3 ;
                       GET 3 ;
                       DUP 3 ;
                       GET ;
                       IF_NONE { PUSH int 1233 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 3 ;
                       CONTRACT unit ;
                       IF_NONE { PUSH int 1233 ; FAILWITH } {} ;
                       PUSH mutez 1 ;
                       PUSH nat 1000 ;
                       DUP 6 ;
                       GET 3 ;
                       DUP 6 ;
                       GET ;
                       IF_NONE { PUSH int 1219 ; FAILWITH } {} ;
                       GET 5 ;
                       CDR ;
                       PUSH mutez 1 ;
                       DUP 8 ;
                       GET 3 ;
                       DUP 8 ;
                       GET ;
                       IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       EDIV ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 1219 ; FAILWITH } { CAR } ;
                       PUSH nat 1000 ;
                       DUP 7 ;
                       GET 5 ;
                       PUSH mutez 1 ;
                       DUP 9 ;
                       GET 3 ;
                       DUP 9 ;
                       GET ;
                       IF_NONE { PUSH int 1216 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       EDIV ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 1218 ; FAILWITH } { CAR } ;
                       ADD ;
                       MUL ;
                       DUP 5 ;
                       GET 3 ;
                       DUP 5 ;
                       GET ;
                       IF_NONE { PUSH int 1233 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       GET 4 ;
                       SUB ;
                       UNIT ;
                       TRANSFER_TOKENS ;
                       CONS }
                     {} ;
                   DIG 2 ;
                   DUP ;
                   GET 3 ;
                   DUP ;
                   DIG 4 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 1236 ; FAILWITH } {} ;
                   PUSH nat 2 ;
                   UPDATE 8 ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   UPDATE 3 ;
                   SWAP }
                 { PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                   SENDER ;
                   COMPARE ;
                   LE ;
                   IF
                     {}
                     { PUSH string "can't create auction from contract address" ;
                       FAILWITH } ;
                   DUP ;
                   CAR ;
                   CAR ;
                   CAR ;
                   PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                   SWAP ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "can't use a contract as artist" ; FAILWITH } ;
                   DUP ;
                   GET 8 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   COMPARE ;
                   GT ;
                   IF {} { PUSH string "end_time before start_time" ; FAILWITH } ;
                   PUSH int 1800 ;
                   SWAP ;
                   DUP ;
                   GET 8 ;
                   SWAP ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   SUB ;
                   COMPARE ;
                   GE ;
                   IF
                     {}
                     { PUSH string "auction needs to run for at least 30 minutes" ;
                       FAILWITH } ;
                   PUSH int 2592000 ;
                   SWAP ;
                   DUP ;
                   GET 8 ;
                   SWAP ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   SUB ;
                   COMPARE ;
                   LE ;
                   IF
                     {}
                     { PUSH string "auction can last for a maximum of 30 days" ;
                       FAILWITH } ;
                   DUP ;
                   GET 8 ;
                   PUSH int 300 ;
                   SWAP ;
                   NOW ;
                   SUB ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "start_time in the past" ; FAILWITH } ;
                   DUP ;
                   GET 3 ;
                   CDR ;
                   PUSH mutez 100000 ;
                   SWAP ;
                   COMPARE ;
                   GE ;
                   IF
                     {}
                     { PUSH string "price increment needs to be at least 0.1 tez" ;
                       FAILWITH } ;
                   DUP ;
                   CAR ;
                   GET 3 ;
                   PUSH nat 3600 ;
                   SWAP ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "max 1 hour extension time" ; FAILWITH } ;
                   DUP ;
                   GET 7 ;
                   PUSH nat 0 ;
                   SWAP ;
                   COMPARE ;
                   GE ;
                   IF
                     { DUP ; GET 7 ; PUSH nat 500 ; SWAP ; COMPARE ; LE }
                     { PUSH bool False } ;
                   IF
                     {}
                     { PUSH string "WrongCondition: (params.royalties >= 0) & (params.royalties <= 500)" ;
                       FAILWITH } ;
                   DUP ;
                   CAR ;
                   GET 4 ;
                   CONTRACT %transfer (list (pair address
                                                 (list (pair address (pair nat nat))))) ;
                   IF_NONE { PUSH int 1239 ; FAILWITH } {} ;
                   NIL operation ;
                   SWAP ;
                   PUSH mutez 0 ;
                   NIL (pair address (list (pair address (pair nat nat)))) ;
                   NIL (pair address (pair nat nat)) ;
                   PUSH nat 1 ;
                   DUP 7 ;
                   GET 3 ;
                   CAR ;
                   SELF_ADDRESS ;
                   PAIR 3 ;
                   CONS ;
                   SENDER ;
                   PAIR ;
                   CONS ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DUP 3 ;
                   DUP ;
                   GET 3 ;
                   PUSH nat 0 ;
                   DUP 5 ;
                   GET 8 ;
                   PAIR ;
                   DIG 4 ;
                   DUP ;
                   GET 7 ;
                   SWAP ;
                   DUP ;
                   DUG 6 ;
                   GET 5 ;
                   PAIR ;
                   PAIR ;
                   DIG 4 ;
                   DUP ;
                   GET 3 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 6 ;
                   GET 3 ;
                   CAR ;
                   PAIR ;
                   SENDER ;
                   PAIR ;
                   PAIR ;
                   DIG 4 ;
                   DUP ;
                   CAR ;
                   GET 4 ;
                   SWAP ;
                   DUP ;
                   DUG 6 ;
                   CAR ;
                   GET 3 ;
                   PAIR ;
                   DUP 6 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   PAIR ;
                   PUSH mutez 0 ;
                   SENDER ;
                   PAIR ;
                   DIG 6 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   SOME ;
                   DIG 4 ;
                   CAR ;
                   CDR ;
                   UPDATE ;
                   UPDATE 3 ;
                   UNPAIR ;
                   UNPAIR ;
                   SWAP ;
                   PUSH nat 1 ;
                   ADD ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   SWAP } } }
         { IF_LEFT
             { IF_LEFT
                 { DROP ;
                   DUP ;
                   CAR ;
                   CAR ;
                   CONTRACT unit ;
                   IF_NONE { PUSH int 1126 ; FAILWITH } {} ;
                   NIL operation ;
                   SWAP ;
                   AMOUNT ;
                   UNIT ;
                   TRANSFER_TOKENS ;
                   CONS }
                 { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF
                     {}
                     { PUSH string "WrongCondition: sp.sender == self.data.admin" ;
                       FAILWITH } ;
                   SET_DELEGATE ;
                   NIL operation ;
                   SWAP ;
                   CONS } }
             { IF_LEFT
                 { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF
                     {}
                     { PUSH string "WrongCondition: sp.sender == self.data.admin" ;
                       FAILWITH } ;
                   SWAP ;
                   UNPAIR ;
                   CDR ;
                   DIG 2 ;
                   PAIR ;
                   PAIR }
                 { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF
                     {}
                     { PUSH string "WrongCondition: sp.sender == self.data.admin" ;
                       FAILWITH } ;
                   UPDATE 5 } ;
               NIL operation } } ;
       NIL operation ;
       SWAP ;
       ITER { CONS } ;
       PAIR }