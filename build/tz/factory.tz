{ parameter
    (pair (pair (address %administrator) (set %coreParticipants address))
          (map %shares address nat)) ;
  storage (pair (address %hicetnuncMinterAddress) (nat %originatedContracts)) ;
  code { UNPAIR ;
         PUSH nat 0 ;
         PUSH nat 0 ;
         PAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         ITER { SWAP ;
                PAIR ;
                DUP ;
                CDR ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CDR ;
                ADD ;
                PUSH nat 1 ;
                DUP 3 ;
                CAR ;
                CAR ;
                ADD ;
                DUP 3 ;
                CDR ;
                DIG 2 ;
                DIG 3 ;
                CAR ;
                CAR ;
                PAIR ;
                CDR ;
                DIG 2 ;
                PAIR ;
                PAIR ;
                CAR } ;
         DUP ;
         CDR ;
         PUSH nat 0 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         COMPARE ;
         EQ ;
         IF { PUSH string "Sum of the shares should be more than 0n" ; FAILWITH } {} ;
         DUP 3 ;
         CDR ;
         PAIR ;
         SWAP ;
         CAR ;
         DUP 4 ;
         CAR ;
         PAIR ;
         DUP 3 ;
         CAR ;
         CDR ;
         DIG 3 ;
         CAR ;
         CAR ;
         PAIR ;
         PAIR ;
         PAIR ;
         PUSH mutez 0 ;
         NONE key_hash ;
         PAIR ;
         PAIR ;
         UNPPAIIR ;
         CREATE_CONTRACT
           { parameter
               (or (or (or (nat %cancel_swap) (pair %collect (nat %objkt_amount) (nat %swap_id)))
                       (or (pair %curate (nat %hDAO_amount) (nat %objkt_id)) (unit %default)))
                   (or (pair %mint_OBJKT
                          (pair (address %address) (nat %amount))
                          (pair (bytes %metadata) (nat %royalties)))
                       (pair %swap (nat %objkt_amount) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) ;
             storage
               (pair (pair (pair (address %administrator) (set %coreParticipants address))
                           (pair (address %hicetnuncMinterAddress) (nat %participantCount)))
                     (pair (map %shares address nat) (nat %totalShares))) ;
             code { LAMBDA
                      (pair (pair (pair address (set address)) (pair address nat)) (pair (map address nat) nat))
                      unit
                      { CAR ;
                        CAR ;
                        CAR ;
                        SENDER ;
                        COMPARE ;
                        EQ ;
                        IF { UNIT }
                           { PUSH string "Entrypoint can call only administrator" ; FAILWITH } } ;
                    SWAP ;
                    UNPAIR ;
                    IF_LEFT
                      { IF_LEFT
                          { IF_LEFT
                              { SWAP ;
                                DUP ;
                                DIG 3 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CDR ;
                                CAR ;
                                CONTRACT %cancel_swap nat ;
                                IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                                PUSH mutez 0 ;
                                DIG 2 ;
                                TRANSFER_TOKENS ;
                                SWAP ;
                                NIL operation ;
                                DIG 2 ;
                                CONS ;
                                PAIR }
                              { SWAP ;
                                DUP ;
                                DIG 3 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CDR ;
                                CAR ;
                                CONTRACT %collect (pair (nat %objkt_amount) (nat %swap_id)) ;
                                IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                                PUSH mutez 0 ;
                                DIG 2 ;
                                TRANSFER_TOKENS ;
                                SWAP ;
                                NIL operation ;
                                DIG 2 ;
                                CONS ;
                                PAIR } }
                          { IF_LEFT
                              { SWAP ;
                                DUP ;
                                DIG 3 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CDR ;
                                CAR ;
                                CONTRACT %curate (pair (nat %hDAO_amount) (nat %objkt_id)) ;
                                IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                                PUSH mutez 0 ;
                                DIG 2 ;
                                TRANSFER_TOKENS ;
                                SWAP ;
                                NIL operation ;
                                DIG 2 ;
                                CONS ;
                                PAIR }
                              { DROP ;
                                SWAP ;
                                DROP ;
                                NIL operation ;
                                PUSH nat 0 ;
                                PUSH mutez 0 ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CAR ;
                                ITER { SWAP ;
                                       PAIR ;
                                       DUP ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       PUSH nat 1 ;
                                       DUP 3 ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       ADD ;
                                       DUP 4 ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { SWAP ; DUP ; DUG 2 ; AMOUNT ; SUB }
                                          { DUP 4 ;
                                            CDR ;
                                            CDR ;
                                            DUP 4 ;
                                            CDR ;
                                            CDR ;
                                            AMOUNT ;
                                            MUL ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR } ;
                                       DUP 4 ;
                                       CDR ;
                                       CAR ;
                                       CONTRACT unit ;
                                       IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       UNIT ;
                                       TRANSFER_TOKENS ;
                                       DUP 5 ;
                                       CDR ;
                                       DUP 6 ;
                                       CAR ;
                                       CDR ;
                                       DIG 4 ;
                                       DUP 7 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       DUP ;
                                       CDR ;
                                       DIG 5 ;
                                       CAR ;
                                       CDR ;
                                       DIG 3 ;
                                       CONS ;
                                       DIG 2 ;
                                       CAR ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       SWAP ;
                                       DIG 2 ;
                                       ADD ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CDR ;
                                       DIG 2 ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       DIG 2 ;
                                       PAIR ;
                                       PAIR } ;
                                CDR ;
                                PAIR } } }
                      { IF_LEFT
                          { SWAP ;
                            DUP ;
                            DIG 3 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CONTRACT %mint_OBJKT
                              (pair (pair (address %address) (nat %amount)) (pair (bytes %metadata) (nat %royalties))) ;
                            IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                            PUSH mutez 0 ;
                            DIG 2 ;
                            TRANSFER_TOKENS ;
                            SWAP ;
                            NIL operation ;
                            DIG 2 ;
                            CONS ;
                            PAIR }
                          { SWAP ;
                            DUP ;
                            DIG 3 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CONTRACT %swap
                              (pair (nat %objkt_amount) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) ;
                            IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                            PUSH mutez 0 ;
                            DIG 2 ;
                            TRANSFER_TOKENS ;
                            SWAP ;
                            NIL operation ;
                            DIG 2 ;
                            CONS ;
                            PAIR } } } } ;
         PAIR ;
         PUSH nat 1 ;
         DUP 3 ;
         CDR ;
         ADD ;
         DIG 2 ;
         CAR ;
         PAIR ;
         NIL operation ;
         DIG 2 ;
         CAR ;
         CONS ;
         PAIR } }

